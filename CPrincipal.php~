<?php
include VMostrarAlumnes;
include CMostrarAlumnes;
include MMostrarAlumnes;

class CPrincipal{
	
	private $funcionalitats;
	
	private $model;
	private $vista;
	private $controlador;
	
	// Contstructora
	function __construct(){

		$this->funcionalitats = array();
		$this->afegirFuncionalitats();

	}
	
	/**
		Mètode que crea un vector amb el nom de les noves funcionalitats.
		Cada vegada que el desenvolupador de l'aplicació crea una nova 
		funcionalitat, cal que afegeixi el nom de l'arxiu en aquest vector
		tenint en compte que:
		
		Cada nova funcionalitat ha d'estar composta per tres arxius:
			VNovaFuncinalitat.php
			MNovaFuncionalitat.php
			CNovaFuncionalitat.php
			El desenvolupador de l'aplicació ha d'afegir al vector el nom:
			NovaFuncionalitat.
		
		Exemple: El desevolupador ha creat una funcionalitat per enviar 
		un correu a tots els alumnes.
		Crea els arxius MEnviarCorreus.php, VEnviarCorreus.php, CEnviarCorreus.php.
		
		En l'arxiu index.php ha afegit el següent enllaç: 
		<a href="./CPrincipal.php?accio=correu">Enviar correu</a>
		i afegeix al vector $funcionalitats la paraula "EnviarCorreus" amb la clau
		'correu' (que ha de correspondre al paràmetre http que activa el procediment)
		d'aquesta manera:
			$this->funcionalitats('correu'=>'EnviarCorreus');
	*/
	private function afegirFuncionalitats(){
		$this->funcionalitats['mostrar']='MostrarAlumnes';
	}
	
	public function main(){
		
		var_dump($this->funcionalitats);
		if (isset($_GET['accio']) && !empty($_GET['accio'])) {
			$m = 'M'.$this->funcionalitats[$_GET['accio']];	
			$v = 'V'.$this->funcionalitats[$_GET['accio']];
			$c = 'C'.$this->funcionalitats[$_GET['accio']];

echo $m . " " . $c	. " " . $v;		
			
			if(isset($m)){
				$this->model 			= new $m(); 
				$this->vista 			= new $v();
				$this->controlador 	= new $c();
				$this->vista->mostraPagina();
			}
		}
	}	
}	

$cp = new CPrincipal();
$cp->main();

?>